https://leetcode.com/problems/maximum-number-of-coins-you-can-get/

class Solution {
public:
    int maxCoins(vector<int>& piles) {
        int n=piles.size();
        sort(piles.begin(),piles.end());
        
        int x=n/3;
        int ans=0;
        for(int i=x;i<n;i+=2)
        {
            ans+=piles[i];
        }
        return ans;
    }
};

https://leetcode.com/problems/final-value-of-variable-after-performing-operations/

class Solution {
public:
    int finalValueAfterOperations(vector<string>& operations) {
        int n=operations.size();
        int ans=0;
        for(int i=0;i<n;i++)
        {
            int cnt1=0;
            for(int j=0;j<3;j++)
            {
                if(operations[i][j]=='+')
                    cnt1++;
            }
            if(cnt1==2)
                ans++;
            else
                ans--;
        }
        return ans;
    }
};

https://leetcode.com/problems/minimum-cost-of-buying-candies-with-discount/

class Solution {
public:
    int minimumCost(vector<int>& cost) {
        int n=cost.size();
        sort(cost.begin(),cost.end());
        
        int ans=0;
        int i;
        for(i=n-1;i>=2;i-=3)
        {
            ans+=cost[i]+cost[i-1];
        }
        for(int j=0;j<=i;j++)ans+=cost[j];
        return ans;
    }
};