https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/

class Solution {
public:
    int fun(vector<int>&nums,int mid)
    {
        int sum=0;
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            sum+=(ceil)(nums[i]/(double)mid);
        }
        return sum;
    }
    int smallestDivisor(vector<int>& nums, int t) {
        int n=nums.size();
        sort(nums.begin(),nums.end());
        
        if(t==n)
            return nums[n-1];
        else
        {
            int l=1;
            int h=nums[n-1];
            int ans=h;
            while(l<=h)
            {
                int mid=l+(h-l)/2;
                int sum=fun(nums,mid);
                if(sum<=t)
                {
                    ans=mid;
                    h=mid-1;
                }
                else
                    l=mid+1;
            }
            return ans;
        }
    }
};