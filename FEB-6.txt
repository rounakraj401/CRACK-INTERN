https://leetcode.com/problems/xor-operation-in-an-array/

class Solution {
public:
    int xorOperation(int n, int start) {
        vector<int>vec(n);
        for(int i=0;i<n;i++)
        {
            vec.push_back(start+2*i);
        }
        int ans=0;
        for(int i=0;i<31;i++){
            int cnt=0;
        for(int j=0;j<vec.size();j++)
        {
          if(vec[j]&(1<<i))
            cnt++;
        }
            ans+=pow(2,i)*(cnt%2);
        }
        return ans;
    }
};

https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/

class Solution {
public:
    int findMin(vector<int>& nums) {
        int l=0;
        int h=nums.size()-1;
        while(l<h)
        {
            int mid=l+(h-l)/2;
            if(nums[mid]<nums[h])
            {
                h=mid;
            }
            else
                l=mid+1;
        }
        return nums[l];
    }
};