https://leetcode.com/problems/rotate-image/

class Solution {
public:
    void rotate(vector<vector<int>>&a) {
        int N=a.size();
        for (int i = 0; i < N / 2; i++) {
        for (int j = i; j < N - i - 1; j++) {
 
            int temp = a[i][j];
            a[i][j] = a[N - 1 - j][i];
            a[N - 1 - j][i] = a[N - 1 - i][N - 1 - j];
            a[N - 1 - i][N - 1 - j] = a[j][N - 1 - i];
            a[j][N - 1 - i] = temp;
        }
    }
        for(int i=0;i<N;i++)
        {
            for(int j=0;j<N;j++)
            {
                cout<<a[i][j]<<" ";
            }
            cout<<endl;
        }
    }
};

https://leetcode.com/problems/powx-n/

class Solution {
public:
    double myPow(double x, int n) {
       
        double res=1;
        while(n)
        {
            if(n%2)
            {
                if(n>=0)res*=x;
                else
                    res/=x;
            }
            n/=2;
            x*=x;
        }
        return res;
    }
};