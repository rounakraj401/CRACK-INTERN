https://leetcode.com/problems/coin-change-2/

class Solution {
public:
/*    int fun(vector<int>&coins,int amount,int n,vector<vector<int>>&dp)
    {
        if(n==0)
            return (amount%coins[0]==0);
        
        if(dp[n][amount]!=-1)return dp[n][amount];
        
        int nottake=fun(coins,amount,n-1,dp);
        int take=0;
        if(coins[n]<=amount)take=fun(coins,amount-coins[n],n,dp);
        
        return dp[n][amount]=(take+nottake);
    }
    */
    
    int change(int amount, vector<int>& coins) {
        int n=coins.size();
        vector<vector<int>>dp(n,vector<int>(amount+1,0));
        
        for(int i=0;i<=amount;i++)
        {
            dp[0][i]=(i%coins[0]==0);
        }
        for(int i=1;i<n;i++)
        {
            for(int j=0;j<=amount;j++)
            {
                int nottake=dp[i-1][j];
                int take=0;
                if(coins[i]<=j)take=dp[i][j-coins[i]];
                
                dp[i][j]=(take+nottake);
            }
        }
        return dp[n-1][amount];
    }
};